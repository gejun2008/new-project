现在计算机，移动mobile的存储单位都是byte。大多数操作系统把字节都定义为8bit。为什么不是4位，7位，9位，16位呢？
为什么C/C++中只是对char的大小定义？requires CHAR_BIT >= 8 and UCHAR_MAX >= 255。

在最开始设计的CPU中总线为4bit，传输一个data4bit就可以。所以最开始存储4位，5位都存在过。随着需要表示的字符的增多，5位已经不能满足要求。然后出现了6位表示一个字节。
直到ASCII码出现，需要7位去表示一个字符。随着硬件的发展，存储空间可以浪费一个字节以便更整齐表示一个字节，而且可以表示更多特殊的非ASCII的字符了，8位表示一个字符就出现了。
后面随着CPU,硬件的发展，16位，32位表示一个字节确实出现了，但是为了适应已经存在的大部分其他8位表示一个字节的计算机，而且是在基本都满足表示所有字符的情况下就显得没有必要了。
在一些DSP上一个字节确实大于8位，例如：Digital Equipment Corporation PDP-6/10等。

还有一些讨论说因为TCP/IP协议中对一个字节定义为8位。所以现在大部分pc 1字节=8位。这个观点我持有保留意见，不是很赞同。

至于为什么C/C++对char定义是大于等于8？
首先C90标准中已经说明了，大于等于8，方便了后面去做类似DSP上的编程。
